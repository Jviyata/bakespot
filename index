<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>BakeSpot</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: 'Times New Roman', serif; /* Changed to serif font */
      background-color: #f5f5f5; /* Beige background */
      color: #5f4e34; /* Deep brownish color for text */
      line-height: 1.6;
    }
    .container {
      width: 100%;
      margin: 0 auto;
      padding: 20px;
    }
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      padding: 20px;
      background-color: #ba4353; /* Soft red background for nav */
    }
    h1 {
      font-size: 3rem;
      color: #ad9f22; /* Golden yellow font color for the title */
      letter-spacing: 1px;
      font-weight: 600;
    }
    .nav-bar {
      display: flex;
      gap: 20px;
    }
    .nav-bar a {
      text-decoration: none;
      font-size: 1rem;
      color: #d0a583; /* Muted light brown font color */
      font-weight: 500;
      transition: color 0.3s ease;
    }
    .nav-bar a:hover {
      color: #ad9f22; /* Golden yellow on hover */
    }
    .search-bar {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-top: 20px; /* Add margin-top to create spacing */
      margin-bottom: 20px; /* Optional: Add bottom margin for further separation */
    }
    .search-bar input {
      width: 50%;
      padding: 10px;
      font-size: 1rem;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    .search-bar button, .search-bar select {
      padding: 10px 15px;
      font-size: 1rem;
      background-color: #ba4353; /* Soft red button */
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .search-bar button:hover, .search-bar select:hover {
      background-color: #ad9f22; /* Golden yellow on hover */
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 20px;
      width: 100%;
    }
    .gallery-item {
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      position: relative;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    .gallery-item img {
      width: 100%;
      height: auto;
      object-fit: cover;
      border-radius: 12px;
      transition: transform 0.3s ease;
    }
    .gallery-item:hover img {
      transform: scale(1.05);
    }
    .gallery-item label {
      position: absolute;
      top: 15px;
      left: 15px;
      background-color: rgba(0, 0, 0, 0.6);
      color: white;
      font-size: 1.1rem;
      font-weight: 600;
      padding: 6px 12px;
      border-radius: 5px;
    }
  </style>
  <script>
    function filterGallery() {
      let searchQuery = document.getElementById('search').value.toLowerCase();
      let filterQuery = document.getElementById('filter').value.toLowerCase();
      let items = document.querySelectorAll('.gallery-item');
      
      items.forEach(item => {
        let label = item.querySelector('label').innerText.toLowerCase();
        if ((label.includes(searchQuery)) && (filterQuery === "all" || label === filterQuery)) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    }
  </script>
</head>
<body>
  <div class="container">
    <header>
      <h1>BakeSpot</h1>
      <nav class="nav-bar">
        <a href="profile.html">Profile</a>
        <a href="recipes.html">Recipes</a>
        <a href="connect.html">Connect</a>
      </nav>
    </header>
    <div class="search-bar">
      <input type="text" id="search" onkeyup="filterGallery()" placeholder="Search for desserts...">
      <button onclick="filterGallery()">Search</button>
      <select id="filter" onchange="filterGallery()">
        <option value="all">All Desserts</option>
        <option value="cake">Cake</option>
        <option value="cookie">Cookie</option>
        <option value="pie">Pie</option>
      </select>
    </div>
    <section class="grid" id="gallery">
      <script>
        let desserts = ["Cake", "Cookie", "Pie"];
        let gallery = document.getElementById('gallery');
        
        // Create 10 of each dessert
        for (let i = 0; i < 10; i++) {
          desserts.forEach(dessert => {
            let div = document.createElement('div');
            div.className = 'gallery-item';
            div.innerHTML = `<img src="https://via.placeholder.com/600x400?text=${dessert}" alt="${dessert}"><label>${dessert}</label>`;
            gallery.appendChild(div);
          });
        }
      </script>
    </section>
  </div>
</body>
</html>
